variables:
  - group: Default Variable Group

trigger:
  - master
  - develop
  - feature/*
  - release/*

pool:
  vmImage: 'ubuntu-latest'

jobs:
  - job: buildAndTest
    strategy:
      matrix:
        node_18_x:
          node_version: 18.x
        node_19_x:
          node_version: 19.x
        node_20_x:
          node_version: 20.x

    displayName: Build and test
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: $(node_version)
        displayName: 'Install Node.js'
      - checkout: self
        fetchDepth: 1
      - task: DockerCompose@0
        displayName: Start services from docker-compose
        inputs:
          action: Run services
          detached: true
          buildImages: true

      - script: npm ci
        displayName: 'Install'

      - script: npm run lint
        displayName: 'Lint'

      - script: npm run build
        displayName: 'Build'

      - script: npm run create-schemas
        displayName: Recreate JSON Schemas

      - script: npm run test
        displayName: 'Test'

      # - script: bash <(curl -s https://codecov.io/bash)
      #   displayName: 'Publish test results to Codecov'

      - task: PublishCodeCoverageResults@1
        displayName: 'Publish test coverage results'
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage/*coverage.xml'
          reportDirectory: '$(System.DefaultWorkingDirectory)/coverage'

      - task: PublishTestResults@2
        displayName: Publish test results
        condition: succeededOrFailed()
        inputs:
          testRunner: JUnit
          testResultsFiles: '$(System.DefaultWorkingDirectory)/coverage/junit.xml'

  - job: showcaseUiTests
    strategy:
      matrix:
        node_19_x:
          node_version: 19.x
        node_20_x:
          node_version: 20.5.x
    displayName: Showcase app UI tests
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: $(node_version)
        displayName: 'Install Node.js'
      - checkout: self
        fetchDepth: 1
      - task: DockerCompose@0
        displayName: Start services from docker-compose
        inputs:
          action: Run services
          detached: true
          buildImages: true

      - script: npm ci
        displayName: 'Install'

      - script: npm run build:showcase
        displayName: 'Build Showcase app'
             
      - script: npm --workspace=@furystack/shades-showcase-app run e2e install --with-deps
        displayName: Install Playwright browsers
      
      - script: npm --workspace=@furystack/shades-showcase-app e2e test
        env:
          CI: true
        displayName: execute tests
        

      # TODO: Check me
      # - task: PublishTestResults@2
      #   displayName: Publish test results
      #   condition: succeededOrFailed()
      #   inputs:
      #     testRunner: JUnit
      #     testResultsFiles: 'packages/shades-showcase-app/test-results'

