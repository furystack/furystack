// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Odata Should add a namespace 1`] = `
ModelBuilder {
  "namespaces": Map {
    "default" => NamespaceBuilder {
      "actions": Array [],
      "collections": CollectionBuilder {
        "collections": Map {},
      },
      "entities": EntityTypeBuilder {
        "entities": Map {},
      },
      "functions": Array [],
      "name": "default",
    },
  },
}
`;

exports[`Odata Should add a namespace and an entity type 1`] = `
ModelBuilder {
  "namespaces": Map {
    "default" => NamespaceBuilder {
      "actions": Array [],
      "collections": CollectionBuilder {
        "collections": Map {},
      },
      "entities": EntityTypeBuilder {
        "entities": Map {
          "MockClass" => Object {
            "model": [Function],
            "primaryKey": "id",
            "properties": Array [
              Object {
                "nullable": false,
                "property": "id",
                "type": 10,
              },
              Object {
                "property": "value",
                "type": 16,
              },
            ],
          },
        },
      },
      "functions": Array [],
      "name": "default",
    },
  },
}
`;

exports[`Odata Should add a namespace with global actions and functions 1`] = `
ModelBuilder {
  "namespaces": Map {
    "default" => NamespaceBuilder {
      "actions": Array [
        Object {
          "action": [Function],
          "name": "login",
        },
      ],
      "collections": CollectionBuilder {
        "collections": Map {},
      },
      "entities": EntityTypeBuilder {
        "entities": Map {},
      },
      "functions": Array [
        Object {
          "action": [Function],
          "name": "isAuthenticated",
        },
      ],
      "name": "default",
    },
  },
}
`;

exports[`Odata Should add a namespace, an entity type and a collection 1`] = `
ModelBuilder {
  "namespaces": Map {
    "default" => NamespaceBuilder {
      "actions": Array [],
      "collections": CollectionBuilder {
        "collections": Map {
          "mockClassEntities" => Object {
            "model": [Function],
            "name": "mockClassEntities",
          },
        },
      },
      "entities": EntityTypeBuilder {
        "entities": Map {
          "MockClass" => Object {
            "model": [Function],
            "primaryKey": "id",
            "properties": Array [
              Object {
                "nullable": false,
                "property": "id",
                "type": 10,
              },
              Object {
                "property": "value",
                "type": 16,
              },
            ],
          },
        },
      },
      "functions": Array [],
      "name": "default",
    },
  },
}
`;

exports[`Odata Should be added to an injector 1`] = `
ModelBuilder {
  "namespaces": Map {},
}
`;

exports[`Odata Should match a complex snapshot and an XML node: ModelBuilder 1`] = `
ModelBuilder {
  "namespaces": Map {
    "default" => NamespaceBuilder {
      "actions": Array [
        Object {
          "action": [Function],
          "name": "login",
        },
      ],
      "collections": CollectionBuilder {
        "collections": Map {
          "mockClassEntities" => Object {
            "actions": Array [
              Object {
                "action": [Function],
                "isBound": true,
                "name": "mockAction1",
                "parameters": Array [
                  Object {
                    "name": "id",
                    "type": 10,
                  },
                ],
              },
            ],
            "functions": Array [
              Object {
                "action": [Function],
                "name": "mockFunction1",
                "returnType": [Function],
              },
            ],
            "model": [Function],
            "name": "mockClassEntities",
          },
        },
      },
      "entities": EntityTypeBuilder {
        "entities": Map {
          "MockClass" => Object {
            "actions": Array [
              Object {
                "action": [Function],
                "isBound": true,
                "name": "mockAction1",
                "parameters": Array [
                  Object {
                    "name": "id",
                    "type": 10,
                  },
                ],
              },
            ],
            "functions": Array [
              Object {
                "action": [Function],
                "name": "mockFunction1",
                "returnType": [Function],
              },
            ],
            "model": [Function],
            "primaryKey": "id",
            "properties": Array [
              Object {
                "nullable": false,
                "property": "id",
                "type": 10,
              },
              Object {
                "property": "value",
                "type": 16,
              },
            ],
          },
        },
      },
      "functions": Array [
        Object {
          "action": [Function],
          "name": "isAuthenticated",
        },
      ],
      "name": "default",
    },
  },
}
`;

exports[`Odata Should match a complex snapshot and an XML node: ModelBuilder XML Node 1`] = `
Object {
  "attributes": Object {
    "Version": "4.0",
    "xmlns:edmx": "http://docs.oasis-open.org/odata/ns/edmx",
  },
  "children": Array [
    Object {
      "children": Array [
        Object {
          "attributes": Object {
            "Namespace": "default",
            "xmlns": "http://docs.oasis-open.org/odata/ns/edm",
          },
          "children": Array [
            Object {
              "attributes": Object {
                "Name": "MockClass",
              },
              "children": Array [
                Object {
                  "children": Array [
                    Object {
                      "attributes": Object {
                        "Name": "id",
                      },
                      "tagName": "PropertyRef",
                    },
                  ],
                  "tagName": "Key",
                },
                Object {
                  "attributes": Object {
                    "Name": "id",
                    "Nullable": "false",
                    "Type": "Edm.Int16",
                  },
                  "tagName": "Property",
                },
                Object {
                  "attributes": Object {
                    "Name": "value",
                    "Type": "Edm.String",
                  },
                  "tagName": "Property",
                },
              ],
              "tagName": "EntityType",
            },
            Object {
              "attributes": Object {
                "Name": "DefaultContainer",
              },
              "children": Array [
                Object {
                  "attributes": Object {
                    "EntityType": "default.MockClass",
                    "Name": "mockClassEntities",
                  },
                  "tagName": "EntitySet",
                },
              ],
              "tagName": "EntityContainer",
            },
            Object {
              "attributes": Object {
                "Name": "login",
              },
              "children": Array [],
              "tagName": "Action",
            },
            Object {
              "attributes": Object {
                "Name": "isAuthenticated",
              },
              "children": Array [],
              "tagName": "Function",
            },
            Object {
              "attributes": Object {
                "IsBound": true,
                "Name": "mockAction1",
              },
              "children": Array [
                Object {
                  "attributes": Object {
                    "Name": "id",
                    "Type": "Edm.Int16",
                  },
                  "tagName": "Parameter",
                },
                Object {
                  "attributes": Object {
                    "Name": "bindingParameter",
                    "Type": "Collection(default.MockClass)",
                  },
                  "tagName": "Parameter",
                },
              ],
              "tagName": "Action",
            },
            Object {
              "attributes": Object {
                "IsBound": true,
                "Name": "mockFunction1",
              },
              "children": Array [
                Object {
                  "attributes": Object {
                    "Type": "default.MockClass",
                  },
                  "tagName": "ReturnType",
                },
                Object {
                  "attributes": Object {
                    "Name": "bindingParameter",
                    "Type": "Collection(default.MockClass)",
                  },
                  "tagName": "Parameter",
                },
              ],
              "tagName": "Function",
            },
            Object {
              "attributes": Object {
                "IsBound": true,
                "Name": "mockAction1",
              },
              "children": Array [
                Object {
                  "attributes": Object {
                    "Name": "id",
                    "Type": "Edm.Int16",
                  },
                  "tagName": "Parameter",
                },
                Object {
                  "attributes": Object {
                    "Name": "bindingParameter",
                    "Type": "default.MockClass",
                  },
                  "tagName": "Parameter",
                },
              ],
              "tagName": "Action",
            },
            Object {
              "attributes": Object {
                "IsBound": true,
                "Name": "mockFunction1",
              },
              "children": Array [
                Object {
                  "attributes": Object {
                    "Type": "default.MockClass",
                  },
                  "tagName": "ReturnType",
                },
                Object {
                  "attributes": Object {
                    "Name": "bindingParameter",
                    "Type": "default.MockClass",
                  },
                  "tagName": "Parameter",
                },
              ],
              "tagName": "Function",
            },
          ],
          "tagName": "Schema",
        },
      ],
      "tagName": "edmx:DataServices",
    },
  ],
  "tagName": "edmx:Edmx",
}
`;
